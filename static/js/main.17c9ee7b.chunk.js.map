{"version":3,"sources":["Card.js","Deck.js","logo.svg","App.js","reportWebVitals.js","index.js"],"names":["Card","props","angle","Math","random","xPos","yPos","_transform","style","transform","this","className","src","image","alt","name","Component","API_BASE_URL","Deck","state","deck","drawn","getCard","bind","a","axios","get","setState","data","id","deck_id","cardUrl","cardRes","success","Error","console","log","card","cards","st","code","value","suit","alert","map","c","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0VAuBeA,E,kDAnBX,WAAYC,GAAQ,IAAD,sBACf,cAAMA,GACN,IAAIC,EAAwB,GAAhBC,KAAKC,SAAgB,GAC7BC,EAAuB,GAAhBF,KAAKC,SAAgB,GAC5BE,EAAuB,GAAhBH,KAAKC,SAAgB,GAJjB,OAKf,EAAKG,WAAL,oBAA+BF,EAA/B,eAA0CC,EAA1C,sBAA4DJ,EAA5D,QALe,E,0CAOrB,WAEE,OACE,qBACEM,MAAO,CAAEC,UAAWC,KAAKH,YACzBI,UAAU,OACVC,IAAKF,KAAKT,MAAMY,MAChBC,IAAKJ,KAAKT,MAAMc,W,GAfLC,aCCbC,G,MAAe,wCAsDNC,E,kDAnDb,WAAYjB,GAAQ,IAAD,8BACjB,cAAMA,IACDkB,MAAQ,CAAEC,KAAM,KAAMC,MAAO,IAClC,EAAKC,QAAU,EAAKA,QAAQC,KAAb,gBAHE,E,4FAKnB,4BAAAC,EAAA,sEACmBC,IAAMC,IAAN,UAAaT,EAAb,kBADnB,OACMG,EADN,OAEEV,KAAKiB,SAAS,CAAEP,KAAMA,EAAKQ,OAF7B,gD,kHAIA,kCAAAJ,EAAA,sEAEMK,EAAKnB,KAAKS,MAAMC,KAAKU,QACrBC,EAHN,UAGmBd,EAHnB,YAGmCY,EAHnC,mBAIsBJ,IAAMC,IAAIK,GAJhC,WAIMC,EAJN,QAKeJ,KAAKK,QALpB,sBAMY,IAAIC,MAAM,qBANtB,OAQEC,QAAQC,IAAIJ,EAAQJ,MAChBS,EAAOL,EAAQJ,KAAKU,MAAM,GAC9B5B,KAAKiB,UAAS,SAAAY,GAAE,MAAK,CACjBlB,MAAM,GAAD,mBACEkB,EAAGlB,OADL,CAED,CACIQ,GAAIQ,EAAKG,KACT3B,MAAOwB,EAAKxB,MACZE,KAAK,GAAD,OAAKsB,EAAKI,MAAV,eAAsBJ,EAAKK,aAhB7C,kDAqBEC,MAAM,EAAD,IArBP,0D,0EA2BA,WACE,IAAML,EAAQ5B,KAAKS,MAAME,MAAMuB,KAAI,SAAAC,GAAC,OAChC,cAAC,EAAD,CAAiB9B,KAAM8B,EAAE9B,KAAMF,MAAOgC,EAAEhC,OAA7BgC,EAAEhB,OAEjB,OACE,sBAAKlB,UAAU,OAAf,UACE,oBAAIA,UAAU,aAAd,yBACA,oBAAIA,UAAU,sBAAd,2CACA,wBAASA,UAAU,WAAWmC,QAASpC,KAAKY,QAA5C,sBACA,qBAAKX,UAAU,gBAAf,SAAgC2B,W,GA9CrBtB,aCNJ,I,MCaA+B,MARf,WACE,OACE,sBAAKpC,UAAU,MAAf,UACE,cAAC,EAAD,IADF,QCKWqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.17c9ee7b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./Card.css\";\r\n\r\nclass Card extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let angle = Math.random() * 90 - 45;\r\n        let xPos = Math.random() * 40 - 20;\r\n        let yPos = Math.random() * 40 - 20;\r\n        this._transform = `translate(${xPos}px, ${yPos}px) rotate(${angle}deg)`;\r\n    }\r\n  render() {\r\n    \r\n    return (\r\n      <img\r\n        style={{ transform: this._transform }}\r\n        className=\"Card\"\r\n        src={this.props.image}\r\n        alt={this.props.name}\r\n      />\r\n    );\r\n  }\r\n}\r\nexport default Card;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport Card from './Card';\r\nimport './Deck.css';\r\nconst API_BASE_URL = \"https://deckofcardsapi.com/api/deck/\";\r\n//create Deck Componsnt\r\nclass Deck extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { deck: null, drawn: [] };\r\n    this.getCard = this.getCard.bind(this);\r\n  }\r\n  async componentDidMount() {\r\n    let deck = await axios.get(`${API_BASE_URL}/new/shuffle/`);\r\n    this.setState({ deck: deck.data });\r\n  }\r\n  async getCard() {\r\n    try {\r\n    let id = this.state.deck.deck_id;\r\n    let cardUrl = `${API_BASE_URL}/${id}/draw/`;\r\n    let cardRes = await axios.get(cardUrl);\r\n    if (!cardRes.data.success) {\r\n        throw new Error(\"No card remaining\");\r\n    }\r\n    console.log(cardRes.data);\r\n    let card = cardRes.data.cards[0];\r\n    this.setState(st => ({\r\n        drawn: [\r\n            ...st.drawn,\r\n            {\r\n                id: card.code,\r\n                image: card.image,\r\n                name: `${card.value} of ${card.suit}`\r\n            }\r\n        ]\r\n    }));\r\n  } catch (err) {\r\n    alert(err);\r\n  }\r\n    \r\n  }\r\n\r\n\r\n  render() {\r\n    const cards = this.state.drawn.map(c => (\r\n        <Card key={c.id} name={c.name} image={c.image} />\r\n    )); \r\n    return (       \r\n      <div className='Deck'>\r\n        <h1 className='Deck-title'>Card Dealer</h1>\r\n        <h2 className='Deck-title subtitle'>A little demo made with React</h2>\r\n        <button  className=\"Deck-btn\" onClick={this.getCard}>Get Card</button>\r\n        <div className='Deck-cardarea'>{cards}</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\nexport default Deck;","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {Component} from 'react';\nimport Deck from './Deck';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Deck />;\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}